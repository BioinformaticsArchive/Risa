%\VignetteIndexEntry{Risa: converts experimental metadata from ISA-tab into Bioconductor data structures}
%\VignetteDepends{Biobase}
%\VignetteKeywords{ImportData}
%\VignettePackage{Risa}
\documentclass[a4paper]{article}

\usepackage{times}
\usepackage{a4wide}
\usepackage{verbatim}

\newcommand{\Robject}[1]{\texttt{#1}}
\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rfunction}[1]{{\small\texttt{#1}}}
\clearpage

\SweaveOpts{keep.source=TRUE,eps=FALSE,include=FALSE,width=4,height=4.5} 

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{Risa: Building R objects from local ISA-Tab files}

\author{Alejandra Gonzalez-Beltran and Steffen Neumann and Audrey Kauffmann\\ and
Gabriella Rustici and Philippe Rocca-Serra and Eamonn Maguire \\
and Susanna-Asunta Sansone\\
isatools@googlegroups.com
}
\maketitle

\section{Introduction}

The Risa package is part of the ISA infrastructure software suite (http://isa-tools.org). It provides funcitonality to read ISA-Tab datasets, described in the following section. 

\section{ISA-Tab format} 

The Investigation / Study / Assay (ISA) Tab-delimited (Tab) format is a general purpose framework with which to collect and communicate complex metadata (i.e. sample characteristics, technologies used, type of measurements made) from experiments employing a combination of technologies (http://isa-tools.org). In particular, ISA-Tab has been developed for - but not limited to - experiments using genomics, transcriptomics, proteomics or metabol/nomics techniques (the 'omics'). 

ISA-Tab uses three types of file to capture the experimental metadata:
\begin{itemize}
\item \emph{Investigation file}
\item \emph{Study file}
\item \emph{Assay file} (with associated data files).
\end{itemize}

The Investigation file contains an overall description of an experiment while all experimental steps are described in the Study and in the Assay file(s). For each Investigation file there may be one or more Study files; for each Study file there may be one or more Assay files.
         
\subsection{Investigation file}

In this file, information is reported on a per-column basis and the fields are organized and divided in sections. The Investigation file is intended to meet three needs: 
\begin{itemize}
\item to define key entities, such as factors, protocols, parameters, which may be referenced in the other files; 
\item to relate Assay files to Study files; and optionally, 
\item to relate each Study file to an Investigation (when two or more Study files need to be grouped). 
The declarative sections cover general information such as contacts, protocols and equipment, and also - where applicable - the description of terminologies (controlled vocabularies or ontologies) and other annotation resources that were used.
\end{itemize}

\subsection{Study file}

In this file, information is structured on a per-row basis with the first row being used for column headers. The Study file contains contextualizing information for one or more assays, for example; the subjects studied; their source(s); the sampling methodology; their characteristics; and any treatments or manipulations performed to prepare the specimens. 

\subsection{Assay file}

In this file, as for the Study file, fields are organized on a per-row basis with the first row being used for column headers. The Assay file represents a portion of the experimental graph (i.e., one part of the overall structure of the workflow); each Assay file must contain assays of the same type, defined by the type of measurement (i.e. gene expression) and the technology employed (i.e. DNA microarray). Assay-related information includes protocols, additional information relating to the execution of those protocols and references to data files (whether raw or processed). 

For easy transfer, ISA-Tab files and associated data files can be packaged into an ISArchive, using a standalone Java application named ISAcreator (http://isatab.sourceforge.net). In order to facilitate identification of ISA-Tab components in an ISArchive, specific extensions have been created as follows:

\begin{itemize}
\item \emph{i\_iname.txt} for identifying the Investigation file
\item \emph{s\_sname.txt} for identifying Study file (s)
\item \emph{a\_aname.txt} for identifying Assay file (s)
\end{itemize}
where 'iname', 'sname', 'aname' are the user-given names for the investigation, study/ies, assay(s), respectively.

\section{The Risa package} 

The Risa package is used to build R objects from an ISA archive or dataset. 
The output is a list of objects containing, for example, the investigation, studies and assays filenames, the contents of their files, the list of samples, among other things.

These objects can then be used by downstream Bioconductor packages for data analysis and visualization (i.e, xcms). The package currently includes the function processAssayXcmsSet that, for a specific mass spectrometry assay, builds an xcmsSet object.

\subsection{Building an R object from a local ISA dataset}

If you have your own ISA archive, you can use the function \Rfunction{readISAtab} to convert it into an R object.
The arguments for the function \Rfunction{readISAtab} are:
\begin{itemize}
 \item{path}{ the name of the directory containing ISAtab files. The default is the working directory.}
  \item{verbose}{ a boolean indicating to show messages for the different steps, if TRUE, or not to show them, if FALSE}
\end{itemize}

As an example, we can use the \emph{faahKO} dataset, whose version 1.2.11 contains an ISA dataset describing the experiment. 

<<LibraryPreload>>=
library(Risa)
library(xcms)
library(CAMERA)
library(faahKO)
@

<<Risa>>=
faahkoISA = readISAtab(find.package("faahKO"))
@

The object \Robject{isaobject} contains the following elements:
\begin{itemize}
\item path - the path of the ISA-Tab dataset, 
\item investigation.filename - the name of the Investigation file
\item investigation.file - a data frame with the contents of the Investigation file
\item study.identifiers - the list of study identifiers
\item study.filenames - the names of the study files
\item study.files - a list of data frames wiht the contents of the study files
\item assay.filenames - the names of the assay files
\item assay.filenames.per.study - the names of the assay files according to the study they belong to
\item assay.files - a list of data frames with the contents of the assay files
\item assay.files.per.study - a list of data frames with the contents of the assay files divided per study they belong to
\item assay.technology.types - a list with the technology types corresponding to each assay
\item assay.measurement.types - a list with the measurement types corresponding to each assay
\item data.filenames - a list with the names of the data files
\item samples - a list with the names of the samples
\item samples.per.assay.filename - the samples classified according to the assay filename they belong to
\item assay.filenames.per.sample - the names of the assay files classified per sample name
\item sample.to.rawdatafile 
\item sample.to.assayname
\item rawdatafile.to.sample
\item assayname.to.sample
\end{itemize}

Additionally, the ISA dataset could be compressed in a .zip file. If that is the case, the function \Rfunction{readISAtab} can be used, passing the \Robject{zipfile} as parameter. The only condition is that the ISA-Tab files are contained directly into the zip file, i.e. not inside additional folders.

In this case, the parameters for the function \Rfunction{readISAtab} will be:
\begin{itemize}
  \item{zipfile}{ a zip archive containing ISAtab files.}
  \item{path}{ the name of the directory in which the files
    from the zip archive will be extracted. The default is the working directory.}
  \item{verbose}{ a boolean indicating to show messages for the different steps, if TRUE, or not to show them, if FALSE}
\end{itemize}


\section*{Building xcmsSets for mass spectrometry assays}

The function \Rfunction{processAssayXcmsSet} allows to build an xcmsSet (object defined in the xcms package) from the information in an assay file.

The parameters for this function are:
\begin{itemize}
\item isa: an ISA object, as retrieved by the function \Rfunction{readISAtab}
\item{assay.filename} a boolean indicating to show messages for the different steps, if TRUE, or not to show them, if FALSE
\item{...} extra arguments that can be passed down to the xcmsSet function from the xcms package
\end{itemize}

<<Risa-processXcmsSet>>=
 assay.filename <- faahkoISA["assay.filenames"][1]
 faahkoXset <- processAssayXcmsSet(faahkoISA, assay.filename)
@

\section*{Augmenting the ISA-Tab dataset after analysis}

The Risa package also provides the functionality to augment the original ISA-Tab dataset with more information after analysis. 

The function \Rfunction{updateAssayMetadata} allows to modify the metadata in a particular assay file.
The arguments are:
\begin{itemize}
\item{isa}{ An isatab object, as retrieved by the \Rfunction{readISAtab} function.}
\item{assay.filename}{ the filename of the assay file to be augmented/modified}
\item{col.name}{ the name of the column of the assay file to be modified}
\item{values}{ the values to be added to the column of the assay file: it could be a single value, and in this case the value is repeated across the column, or it could be a list of values (whose length must match the number of rows of the assay file) }
\end{itemize}


To continue with our example using the \emph{faahKO} data package, we will use the \emph{xcms} and \emph{CAMERA} packages and follow a typical workflow for the analysis of mass spectrometry in metabolomics. Finally, we will update the ISA-Tab dataset adding the result file into the "Metabolite Assingment File" column of the assay file.

<<Grouping>>=
faahkoXset <- group(faahkoXset, minfrac=0.75, bw=2)
retcor(faahkoXset, plottype="mdevden")
faahkoXset <- fillPeaks(faahkoXset)

an <- xsAnnotate(faahkoXset,
                 sample=seq(1,length(sampnames(faahkoXset))),
                 nSlaves=2)

an <- groupFWHM(an)

an <- findIsotopes(an)  # optional but recommended.

@
<<>>=

#an <- groupCorr(an,
#                graphMethod="lpc",
#                calcIso = TRUE,
#                calcCiS = TRUE,
#                calcCaS = TRUE,
#                cor_eic_th=0.5)

an <- findAdducts(an,
                  polarity="positive")

pl <- getPeaklist(an)

l <- nrow(pl)

charge <- sapply(an@isotopes, function(x) {ifelse( length(x) > 0, x$charge, NA) })
abundance <- groupval(an@xcmsSet, value="into")

maf <- data.frame(identifier = character(l), 
                  chemical_formula = character(l), 
                  description = character(l), 
                  mass_to_charge = pl$mz, 
                  fragmentation = character(l), 
                  charge = charge, 
                  retention_time = pl$rt, 
                  taxid = character(l), 
                  species = character(l), 
                  database = character(l), 
                  database_version = character(l), 
                  reliability = character(l), 
                  uri = character(l), 
                  search_engine = character(l), 
                  search_engine_score = character(l),
                  modifications = character(l), 
                  smallmolecule_abundance_sub = character(l),
                  smallmolecule_abundance_stdev_sub = character(l), 
                  smallmolecule_abundance_std_error_sub = character(l),
                  abundance, stringsAsFactors=FALSE)
@
<<>>=
maf_character <- apply(maf, 2, as.character)

##
## These columns are defined by mzTab
##

maf.std.colnames <- c("identifier", "chemical_formula", "description",
"mass_to_charge", "fragmentation", "charge", "retention_time",
"taxid", "species", "database", "database_version", "reliability",
"uri", "search_engine", "search_engine_score", "modifications",
"smallmolecule_abundance_sub", "smallmolecule_abundance_stdev_sub",
"smallmolecule_abundance_std_error_sub")

a.samples <- faahkoISA["samples.per.assay.filename"][[ assay.filename ]]

##
## Plus the columns for the sample intensities
##
all.colnames <- c(maf.std.colnames, a.samples)


write.table(maf_character, file="faahko_maf2.csv",
            row.names=FALSE, col.names=all.colnames, quote=TRUE, sep="\t", na="\"\"")

updateAssayMetadata(faahkoISA, assay.filename,"Metabolite Assignment File","faahko_maf2.csv" )
@

For more details in a similar workflow, please refer to https://github.com/sneumann/mtbls2/.


\section*{Writing ISA-Tab datasets}

The Risa package offers functions to write the whole ISA-Tab dataset or part of it back to disk. These functions are \Rfunction{write.isatab}, \Rfunction{write.investigation.file}, \Rfunction{write.study.file}, \Rfunction{write.assay.file}.

<<Risa>>=
write.assay.file(ISAmtbls2, a.filename)
@


\section*{Session Info}
%
<<pkgs, results=tex>>=
toLatex(sessionInfo())
@
%

\section*{Further information}

For further information about the ISA software infrastructure, please visit our website http://isa-tools.org.


\end{document}
